<Page x:Class="Blog.WpfGui.Views.Pages.TopicsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Blog.WpfGui.Views.Pages"
      xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
      xmlns:helpers="clr-namespace:Blog.WpfGui.Helpers"
      xmlns:uc="clr-namespace:Blog.WpfGui.Views.UserControls"
      d:DataContext="{d:DesignInstance local:TopicsPage, IsDesignTimeCreatable=False}"
      mc:Ignorable="d"
      d:Foreground="Black"
      d:Background="Gray"
      d:DesignHeight="450" 
      d:DesignWidth="800"
      Foreground="{DynamicResource TextFillColorPrimaryBrush}"
      Title="TopicsPage">
    <Page.Resources>
        <helpers:BindingProxy x:Key="Proxy" Data="{Binding}" />
    </Page.Resources>
    
    <Border Style="{StaticResource PageBorderStyle}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!--Page Title-->
            <uc:PageTitleControl Title="Topics" 
                                 Grid.Row="0" />

            <Border Grid.Row="1"
                    Margin="0,50,0,0"
                    d:Visibility="Collapsed"
                    Visibility="{Binding ViewModel.ShowWaitIndicator, Converter={StaticResource BoolToVisibilityConverter}}">
                <ui:ProgressRing IsIndeterminate="True" />
            </Border>

            <Border Margin="0,10"
                    Visibility="{Binding ViewModel.ShowWaitIndicator, Converter={StaticResource BoolToVisibilityInverseConverter}}"
                    d:Visibility="Visible"
                    Grid.Row="2">

                <StackPanel Orientation="Horizontal">
                    <ui:Button Content="New"
                               Command="{Binding ViewModel.NewTopicCommand}" />
                </StackPanel>

            </Border>


            <Border Grid.Row="3"
                    Visibility="{Binding ViewModel.ShowWaitIndicator, Converter={StaticResource BoolToVisibilityInverseConverter}}"
                    d:Visibility="Visible">

                <ui:DataGrid ItemsSource="{Binding ViewModel.Topics}"
                             d:ItemsSource="{d:SampleData ItemCount=5}"
                             x:Name="TopicsTable"
                             AllowDrop="False"
                             CanUserReorderColumns="False"
                             CanUserAddRows="False"
                             CanUserDeleteRows="False"
                             CanUserResizeRows="False"
                             IsReadOnly="True"
                             SelectionUnit="FullRow"
                             ColumnWidth="*"
                             SelectedItem="{Binding ViewModel.SelectedTopic, Mode=TwoWay}"
                             SelectionMode="Single"
                             AutoGenerateColumns="False">
                    <ui:DataGrid.Resources>
                        <Style TargetType="DataGridCell"
                               BasedOn="{StaticResource {x:Type DataGridCell}}">
                            <EventSetter Event="MouseDoubleClick"
                                         Handler="DataGridCell_MouseDoubleClick" />
                        </Style>
                    </ui:DataGrid.Resources>

                    <ui:DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu>
                                        <MenuItem Header="Edit Topic"
                                                  Command="{Binding Source={StaticResource Proxy}, Path=Data.ViewModel.EditTopicCommand}"
                                                  CommandParameter="{Binding}" />

                                        <MenuItem Command="{Binding Source={StaticResource Proxy}, Path=Data.ViewModel.DeleteTopicCommand}"
                                                  CommandParameter="{Binding}"
                                                  Header="Delete Topic" />

                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ui:DataGrid.RowStyle>

                    <ui:DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Name}" Header="Name" />
                        <DataGridTextColumn Binding="{Binding Count}" Header="Count" />
                    </ui:DataGrid.Columns>
                </ui:DataGrid>

            </Border>
        </Grid>
    </Border>
    
  
</Page>
